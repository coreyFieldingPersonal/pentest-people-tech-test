import { useEffect, useState } from "react"

// Import Components.
import { Card } from ".."
import { Link } from "react-router-dom"

// Import API.
import { fetchPaginatedVulnerabilities } from "../../api/fetchPaginatedVulnerabilities"

// Import Helpers.
import { formatDate } from "../../helpers/formatDate";

// Import Types.
import { Severity, IVulnerability } from "../../types/VulnerabilityType";

const SeverityStatusPill = ({ severity }: {severity: Severity}) => {
    const severityClasses: {[key: string]: string} = {
        CRITICAL: 'bg-red-500',
        HIGH: 'bg-orange-500',
        MEDIUM: 'bg-yellow-500',
        LOW: 'bg-green-500',
        INFO: 'bg-blue-500'
    }

    return <span className={`w-20 p-2 rounded-lg font-bold text-sm ${severityClasses[severity]}`}>{severity}</span>
}

const VulnerabilityItem: React.FC<IVulnerability> = (data) => {
    const {
        id,
        name,
        severity,
        created_at,
        additional_affected_asset_fields: assets
    } = data

    const dateIdentified = formatDate(new Date(created_at))
    
    return (
        <li data-testid="vulnerability_item" className="py-3">
            <div className="flex items-center justify-between gap-x-4">
                <div className="flex items-center gap-x-8">
                    <SeverityStatusPill severity={severity}/>
                    <div className="text-left">
                        <p className="flex items-center py-2 font-bold text-gray-950 text-lg truncate">
                            {name}
                            <span className="ml-3 py-1 px-2 bg-blue-500 rounded-full text-xs text-white">{assets?.length} Assets</span>
                        </p>
                        <p className="text-sm text-gray-500">First Identified: {dateIdentified}</p>
                    </div>
                </div>
        
                <Link to={`/${id}`} state={data} className="justify-end text-blue-500">View report</Link>
            </div>
        </li>
    )
}

export const VulnerabilitiesPanel = () => {
    const [data, setData] = useState<any>([])
    const [activePage, setActivePage] = useState(0)

    useEffect(() => {
        const getVulnerabilities = async () => {
            const result = await fetchPaginatedVulnerabilities(activePage)

            if (!result) return
            
            const { items, count } = result
            
            if (!items || activePage == count) return

            setData(items)
        }

        getVulnerabilities()
    }, [activePage])

    const handlePageChange = (page: number) => {
        setActivePage(page)
    }
    
    return (
        <Card heading="Top Vulnerabilities">
            <ul role="vulnerability_list" className="divide-y">
                {data.map((item: IVulnerability, idx: number) => <VulnerabilityItem key={idx} {...item} /> )}
            </ul>
            <div className="text-right">
                <button onClick={() => handlePageChange(activePage - 1)} className="mr-6 bg-transparent text-gray-700">Previous</button>
                <button onClick={() => handlePageChange(activePage + 1)} className="bg-transparent text-gray-700">Next</button>
            </div>
        </Card>
    )
}